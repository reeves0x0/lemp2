global
    log /dev/log   local0 notice
    #chroot /var/lib/haproxy #не работает в версии 2.3
    maxconn 20000
    user haproxy
    group haproxy
    stats timeout 30s
    daemon
    stats socket /var/lib/haproxy/stats level admin

#########################################################################################

defaults
    log global          #указывает, в какой лог вести записи (global в данном случае означает, что используются параметры, заданные в секции global)
    mode http           # устанавливает протокол взаимодействия, принимает одно из значений: tcp, http, health
    retries 3           #количество попыток соединения с сервером в случае отказа
    option httplog      #формат лога, в случае использования HAProxy для проксирования HTTP-запросов, рекомендуется включать данную настройку
    option redispatch   #разрешает программе разорвать и переназначить сессию в случае отказа сервера
    maxconn 2000        # макс колво коннектов
    timeout connect 5s
    timeout client 10s
    timeout server 30s
    timeout http-keep-alive 10s
##########################################################################################
frontend security_scan_vuln  #(если количество ошибок сгенеренных одним ip  за 10 сек больше 10, ip будет помечен как abuser)
    mode http
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/test-site.pem
    stick-table type ip size 1m expire 10s store gpc0,http_err_rate(10s)
    tcp-request connection track-sc1 src
    tcp-request connection reject if { src_get_gpc0 gt 0 }
    default_backend lemp

frontend security_limit_user_connection     #Limiting the connection rate per user (1 ip имеет не более 10 соединений)
    mode http
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/test-site.pem
    stick-table type ip size 100k expire 30s store conn_rate(3s)
    tcp-request connection accept if { src -f /usr/local/etc/haproxy/whitelist.lst } #список ip которые могут обходить фильтр
    tcp-request connection reject if { src_conn_rate ge 10 }
    tcp-request connection track-sc2 src #не забываем менять трек номер
    default_backend lemp

frontend listener
    mode    http
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/test-site.pem
    http-request redirect scheme https unless { ssl_fc } #слать всех с http на https
    http-request deny if { path -i -m beg / } { src -f /usr/local/etc/haproxy/black-ip.lst } #запрещаем конект с этих IP к корню / проекта
    default_backend lemp  
  
backend lemp
    balance     roundrobin #по очереди (source-Выбирает сервер исходя из хеша, построенного на основе IP пользователя, leastconn - сервер с меньшим колво соединений, First: первый сервер с доступными слотами для подключения получает соединение)
    mode        http #допускает выполнение нескольких веб-приложений на одном домене и порте
    server  lemp1 web_srv:443 check weight 10 maxconn 10000 ssl verify none
    #server  lemp2 IP:443 check weight 10 maxconn 10000
    #server  lemp1 web_srv:80 check weight 10 maxconn 10000
    #server  lemp2 IP:80 check weight 10 maxconn 10000

   #anti scan vuln (если количество ошибок сгенеренных одним ip  за 10 сек больше 10, ip будет помечен как abuser)
    acl abuse src_http_err_rate(security_scan_vuln) ge 10
    acl flag_abuser src_inc_gpc0(security_scan_vuln)
    tcp-request content reject if abuse flag_abuser
##########################################################################################
#статистика
listen stats
        bind :10001
        stats enable
        stats uri /haproxy_stats
        stats auth admin:suPERpasSword
